<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Docker - 标签 - wall-e's craft</title><link>https://huangjingwei.github.io/tags/docker/</link><description>Docker - 标签 - wall-e's craft</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hjw6613@163.com (立青人韦)</managingEditor><webMaster>hjw6613@163.com (立青人韦)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Jul 2023 01:31:07 +0000</lastBuildDate><atom:link href="https://huangjingwei.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>开发环境准备</title><link>https://huangjingwei.github.io/posts/dev-env/</link><pubDate>Sat, 01 Jul 2023 01:31:07 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/dev-env/</guid><description>编排依赖的服务容器 这里，容器化准备开发所依赖的环境。 下面的示例配置了redis，minio，postgres_db, registry的服务。</description></item><item><title>镜像和容器的Entrypoint和CMD</title><link>https://huangjingwei.github.io/posts/cmd/</link><pubDate>Sat, 08 Oct 2022 14:26:12 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/cmd/</guid><description><![CDATA[Entrypoint和CMD No ENTRYPOINT ENTRYPOINT exec_entry p1_entry ENTRYPOINT [&ldquo;exec_entry&rdquo;, &ldquo;p1_entry&rdquo;] No CMD error, not allowed /bin/sh -c exec_entry p1_entry exec_entry p1_entry CMD [&ldquo;exec_cmd&rdquo;, &ldquo;p1_cmd&rdquo;] exec_cmd p1_cmd /bin/sh -c exec_entry p1_entry exec_entry p1_entry exec_cmd p1_cmd CMD [&ldquo;p1_cmd&rdquo;, &ldquo;p2_cmd&rdquo;] p1_cmd p2_cmd /bin/sh -c exec_entry p1_entry exec_entry p1_entry p1_cmd p2_cmd CMD exec_cmd p1_cmd /bin/sh -c exec_cmd p1_cmd /bin/sh -c exec_entry p1_entry]]></description></item><item><title>Registry 认证和授权</title><link>https://huangjingwei.github.io/posts/auth/</link><pubDate>Sun, 04 Sep 2022 14:52:37 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/auth/</guid><description>认证方案 Registry的授权方案是基于OAuth2.0的密码模式。 上面代表的是以Docker举例的Registry的认证鉴权方案： 1.Docker Dae</description></item><item><title>Docker 安装和网络代理</title><link>https://huangjingwei.github.io/posts/proxy/</link><pubDate>Sun, 07 Nov 2021 13:34:16 +0800</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/proxy/</guid><description>1 Docker Docker是一个开放平台，可用于容器镜像的开发、交付和运行。 Docker名词一般是泛指。一般会代指Docker引擎(Docker Eng</description></item></channel></rss>