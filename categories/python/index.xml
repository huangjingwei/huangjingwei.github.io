<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 分类 - wall-e's craft</title><link>https://huangjingwei.github.io/categories/python/</link><description>Python - 分类 - wall-e's craft</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>hjw6613@163.com (立青人韦)</managingEditor><webMaster>hjw6613@163.com (立青人韦)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 01 Jul 2023 09:22:15 +0000</lastBuildDate><atom:link href="https://huangjingwei.github.io/categories/python/" rel="self" type="application/rss+xml"/><item><title>Python https的双向认证</title><link>https://huangjingwei.github.io/posts/https-verify/</link><pubDate>Sat, 01 Jul 2023 09:22:15 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/https-verify/</guid><description><![CDATA[建立CA 1 openssl genrsa -aes256 -out ca.key 2048 1 openssl req -x509 -new -sha256 -key ca.key -out ca.crt -subj &#34;/C=CN/CN=localhost&#34; 建立服务端证书 1 openssl genrsa -out service.key 4096 1 2 openssl req -new -sha256 -key service.key -subj &#34;/C=CN/OU=h/L=Hangzhou/O=j/ST=zhejiang/CN=localhost&#34; -reqexts SAN -config &lt;(cat openssl.cnf &lt;(printf &#34;\n[SAN]\nsubjectAltName = DNS:localhost&#34;)) -out service.csr 1 2 openssl x509 -req -in service.csr -CA ca.crt -CAKey ca.key -out service.crt]]></description></item><item><title>Python装饰器</title><link>https://huangjingwei.github.io/posts/decorator/</link><pubDate>Sat, 01 Jul 2023 09:22:15 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/decorator/</guid><description>一句话定义 装饰器本质上是一个Python函数或类，它可以让其他函数或类在不需要做任何代码修改的前提下增加额外功能，装饰器的返回值也是一个函数</description></item><item><title>Python闭包</title><link>https://huangjingwei.github.io/posts/closure/</link><pubDate>Sun, 21 May 2023 12:13:53 +0000</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/closure/</guid><description>定义 闭包，是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外。 有另一种说法认为闭包是由函数</description></item><item><title>Pipenv 的基本使用</title><link>https://huangjingwei.github.io/posts/pipenv-usage/</link><pubDate>Sat, 05 Mar 2022 19:38:02 +0800</pubDate><author>作者</author><guid>https://huangjingwei.github.io/posts/pipenv-usage/</guid><description>&lt;a class="lightgallery" href="/python/pipenv_usage/pipenv-half.jpg" title="/python/pipenv_usage/pipenv-half.jpg" data-thumbnail="/python/pipenv_usage/pipenv-half.jpg">
&lt;/a>
&lt;p>Pipenv是Python项目的依赖管理器。尽管pip可以安装Python包，但仍推荐使用Pipenv，因为它是一种更高级的工具，可简化依赖关系管理的常见使用情况。&lt;/p></description></item></channel></rss>